import React from "react";
import { User } from "@/entities/User";
import { Link } from "react-router-dom";
import { createPageUrl } from "@/utils";
import { 
  Settings, 
  ShoppingBag, 
  Plus, 
  Image, 
  BarChart3,
  LogOut,
  Crown
} from "lucide-react";
import { Button } from "@/components/ui/button";

export default function Profile() {
  const [user, setUser] = React.useState(null);
  const [loading, setLoading] = React.useState(true);

  React.useEffect(() => {
    loadUser();
  }, []);

  const loadUser = async () => {
    try {
      const userData = await User.me();
      setUser(userData);
    } catch (error) {
      console.error("获取用户信息失败:", error);
    } finally {
      setLoading(false);
    }
  };

  const handleLogout = async () => {
    await User.logout();
  };

  const menuItems = [
    {
      icon: Plus,
      title: "添加商品",
      description: "添加新的商品到图库",
      url: createPageUrl("AddProduct"),
      color: "text-green-600 bg-green-50"
    },
    {
      icon: ShoppingBag,
      title: "商品管理",
      description: "管理您的所有商品",
      url: createPageUrl("ManageProducts"),
      color: "text-blue-600 bg-blue-50"
    },
    {
      icon: Image,
      title: "轮播图管理",
      description: "管理首页轮播图",
      url: createPageUrl("ManageBanners"),
      color: "text-purple-600 bg-purple-50"
    },
    {
      icon: BarChart3,
      title: "数据统计",
      description: "查看商品和访问统计",
      url: "#",
      color: "text-orange-600 bg-orange-50"
    }
  ];

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-orange-500"></div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-b from-orange-50 to-gray-50">
      {/* 用户信息卡片 */}
      <div className="bg-gradient-to-r from-orange-500 to-red-500 text-white">
        <div className="px-6 py-8">
          <div className="flex items-center space-x-4">
            <div className="w-16 h-16 bg-white/20 rounded-full flex items-center justify-center">
              <span className="text-2xl font-bold">
                {user?.full_name?.[0]?.toUpperCase() || "U"}
              </span>
            </div>
            <div className="flex-1">
              <h2 className="text-xl font-bold">{user?.full_name || "用户"}</h2>
              <p className="text-orange-100 text-sm">{user?.email}</p>
              {user?.role === 'admin' && (
                <div className="flex items-center gap-1 mt-1">
                  <Crown className="w-4 h-4" />
                  <span className="text-sm">管理员</span>
                </div>
              )}
            </div>
          </div>
        </div>
      </div>

      {/* 功能菜单 */}
      <div className="px-4 py-6 space-y-4">
        <h3 className="text-lg font-semibold text-gray-900 mb-4">管理功能</h3>
        
        <div className="space-y-3">
          {menuItems.map((item, index) => (
            <Link key={index} to={item.url}>
              <div className="bg-white rounded-xl p-4 shadow-sm border border-gray-100 hover:shadow-md transition-all duration-200 active:scale-[0.98]">
                <div className="flex items-center space-x-4">
                  <div className={`w-12 h-12 rounded-xl flex items-center justify-center ${item.color}`}>
                    <item.icon className="w-6 h-6" />
                  </div>
                  <div className="flex-1">
                    <h4 className="font-semibold text-gray-900">{item.title}</h4>
                    <p className="text-sm text-gray-500">{item.description}</p>
                  </div>
                </div>
              </div>
            </Link>
          ))}
        </div>
      </div>

      {/* 设置选项 */}
      <div className="px-4 py-6 space-y-4 border-t border-gray-200 bg-white/50">
        <h3 className="text-lg font-semibold text-gray-900 mb-4">设置</h3>
        
        <button className="w-full bg-white rounded-xl p-4 shadow-sm border border-gray-100 hover:shadow-md transition-all duration-200 active:scale-[0.98]">
          <div className="flex items-center space-x-4">
            <div className="w-12 h-12 rounded-xl bg-gray-50 flex items-center justify-center">
              <Settings className="w-6 h-6 text-gray-600" />
            </div>
            <div className="flex-1 text-left">
              <h4 className="font-semibold text-gray-900">应用设置</h4>
              <p className="text-sm text-gray-500">个性化设置和偏好</p>
            </div>
          </div>
        </button>

        <button 
          onClick={handleLogout}
          className="w-full bg-white rounded-xl p-4 shadow-sm border border-gray-100 hover:shadow-md transition-all duration-200 active:scale-[0.98] hover:bg-red-50"
        >
          <div className="flex items-center space-x-4">
            <div className="w-12 h-12 rounded-xl bg-red-50 flex items-center justify-center">
              <LogOut className="w-6 h-6 text-red-600" />
            </div>
            <div className="flex-1 text-left">
              <h4 className="font-semibold text-gray-900">退出登录</h4>
              <p className="text-sm text-gray-500">安全退出您的账户</p>
            </div>
          </div>
        </button>
      </div>
    </div>
  );
}
